name: test - kots-install

on:
  pull_request:
    branches:
      - main
    paths:
      - kots-install/**
      - .github/workflows/test-kots-install.yml

concurrency:
  group: test-kots-install-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      WORDPRESS_CHART_VERSION: 22.2.8
      APP_SLUG: replicated-actions-ci # from the Replicated QA team

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: |
            **/package-lock.json

      - name: build
        run: make package-kots-install

      - name: create-release
        id: create-release
        uses: replicatedhq/replicated-actions/create-release@v1
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          app-slug: ${{ env.APP_SLUG }}
          yaml-dir: ./test/kots-install/yaml

      - name: create-customer
        id: create-customer
        uses: replicatedhq/replicated-actions/create-customer@v1
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          app-slug: replicated-actions-ci # from the Replicated QA team
          customer-name: "CI Test Customer - ${{ github.ref_name }} - ${{ github.sha }}"
          customer-email: ${{ github.sha }}@example.com
          license-type: test

      - name: create-cluster
        id: create-cluster
        uses: replicatedhq/replicated-actions/create-cluster@v1
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          kubernetes-distribution: kind
          timeout-minutes: 5

      - name: test kots-install / config string
        id: kots-install-config-string
        uses: ./kots-install
        with:
          kubeconfig: ${{ steps.create-cluster.outputs.cluster-kubeconfig }}
          app-slug: ${{ env.APP_SLUG }}/${{ steps.create-release.outputs.channel-slug }}
          license-file: ${{ steps.create-customer.outputs.license-file }}
          app-version-label: release__${{ steps.create-release.outputs.release-sequence }}
          namespace: config-string
          config-values: |
            apiVersion: kots.io/v1beta1
            kind: ConfigValues
            metadata:
              name: nginx
            spec:
              values:
                api_token:
                  value: r8yWQ/cUeLVprKGKZb2gpE5IcQ0Tep1iaNwn7078
                example_default_value:
                  default: please change this value
                  value: testing
                hidden_text:
                  value: lPiIJL1RfL4v/YKzHfnx/9HyR2x4t5wnVxSLmzJlmf12HlqlyBoSfnvd0O+mftiT8h0+kumsBqc=
                readonly_text_left:
                  value: 8WIAQHZW_G
                show_text_inputs:
                  default: "0"
                  value: "1"

      - name: test kots-install / config file
        id: kots-install-config-file
        uses: ./kots-install
        with:
          kubeconfig: ${{ steps.create-cluster.outputs.cluster-kubeconfig }}
          app-slug: ${{ env.APP_SLUG }}/${{ steps.create-release.outputs.channel-slug }}
          license-file: ${{ steps.create-customer.outputs.license-file }}
          app-version-label: release__${{ steps.create-release.outputs.release-sequence }}
          namespace: config-file
          config-values: ./test/kots-install/config.yaml

      - name: remove cluster
        id: remove-cluster
        if: always()
        uses: replicatedhq/replicated-actions/remove-cluster@v1
        continue-on-error: true # It could be that the cluster is already removed
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          cluster-id: ${{ steps.create-cluster.outputs.cluster-id }}
